{% extends 'base.html.twig' %}
{% block title %}Convertisseur — Royal Gold Forex{% endblock %}

{% block stylesheets %}
  {{ parent() }}
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800&display=swap');

    /* ===== Header GRIS (style CGV) ===== */
    .convert-banner {
      background:#f3f4f6;
      padding:40px 20px 60px;
      text-align:center;
      font-family:'Poppins',sans-serif;
      border-bottom:1px solid #e5e7eb;
    }
    .convert-banner .breadcrumb {
      font-size:14px;
      margin-bottom:22px;
      color:#000;
    }
    .convert-banner .breadcrumb a {
      color:#000;
      text-decoration:underline;
      text-underline-offset:3px;
    }
    .convert-banner h1 {
      font-size:36px;
      font-weight:700;
      margin:0;
      color:#0b1220;
      letter-spacing:.5px;
    }

    /* ===== Bloc HERO devise (gros titre avant le convertisseur) ===== */
    .currency-hero{
      max-width:1100px; margin:28px auto 6px; padding:0 20px; text-align:center;
      font-family:'Poppins',sans-serif; color:#000;
    }
    .currency-hero .code{ font-size:56px; font-weight:800; letter-spacing:2px; line-height:1; }
    .currency-hero .country{ font-size:22px; font-weight:600; margin-top:6px; }

    /* ===== Container du convertisseur ===== */
    .calc-container, .calc-container *{ font-family:'Poppins',sans-serif; color:#000; }
    .calc-container{max-width:1100px;margin:28px auto 72px;padding:0 20px}

    .calc-grid{ display:grid; grid-template-columns:1fr 1fr; gap:28px }
    @media(max-width:900px){ .calc-grid{ grid-template-columns:1fr } }
    .card{ background:#fff; border:1px solid #000; border-radius:0; padding:28px; box-shadow:var(--shadow) }

    .calc-header{
      display:flex;align-items:center;gap:10px;
      margin:0 0 16px 0;font-weight:400;
      letter-spacing:.1px;color:#000;font-size:18px;
    }
    .badge{font-size:.8rem;font-weight:600;padding:4px 10px;border-radius:0;color:#fff;background:#000}

    .label-static{font-weight:600}
    .value-static{padding:12px 14px;border:1px dashed #000;border-radius:0;background:#fafafa;font-weight:400;}

    .field{
      padding:13px 14px; border:1px solid #000; border-radius:0;
      background:#fff; width:100%;
    }
    .field:focus{outline:none;border-color:#000;box-shadow:0 0 0 2px rgba(0,0,0,.1)}

    input[type=number]::-webkit-outer-spin-button,
    input[type=number]::-webkit-inner-spin-button{ -webkit-appearance:none; margin:0 }
    input[type=number]{ -moz-appearance:textfield; appearance:textfield }

    .form-grid{ display:grid; grid-template-columns:1fr; gap:18px; align-items:start; }
    .form-block{ display:grid; gap:6px; } 

    .btn{
      appearance:none;border:1px solid #000;padding:13px 16px;border-radius:0;
      color:#fff;font-weight:700;cursor:pointer;width:100%;background:#000;transition:opacity .12s ease;margin-top:4px
    }
    .btn:hover{opacity:.9}
    .btn:active{opacity:.85}

    .chip{ margin-top:14px;border:1px solid #000;background:#fff;padding:12px;border-radius:0;font-weight:400; }
    .chip.alt{border-color:#000;background:#fff}
    .chip strong{ font-weight:400; }

    /* ===== Article devise SANS CADRE ===== */
    .info-article{max-width:1100px;margin:28px auto 90px;padding:0 20px}
    .info-article .h2{
      margin:0 0 16px;font-weight:800;font-size:22px;letter-spacing:.2px;
      text-decoration:underline; text-underline-offset:4px; /* souligné */
    }
    .article-body{line-height:1.75}
    .article-body h3{font-weight:700;font-size:18px;margin:22px 0 8px}
    .article-body p{margin:0 0 14px}
    .article-body ul{padding-left:18px;margin:0 0 14px}
    .article-body li{margin:6px 0}
    .article-body hr{border:none;border-top:1px dashed #000;margin:18px 0}
    .article-body blockquote{margin:12px 0;padding:12px 16px;border:1px dashed #000;background:#fafafa}
  </style>
{% endblock %}

{% block body %}

  <!-- ===== Header (style CGV) — sans pays/code ===== -->
  <header class="convert-banner">
    <div class="breadcrumb">
      <a href="{{ path('app_exchange', {mode: mode|default('guest')}) }}">Accueil</a> — 
      <span>Convertisseur</span>
    </div>
    <h1>Convertisseur de devises</h1>
  </header>

  <!-- ===== GROS bloc devise juste avant le convertisseur ===== -->
  <section class="currency-hero" aria-label="Devise courante">
    <div class="code">{{ code }}</div>
    <div class="country">{{ current.country }}</div>
  </section>

  <!-- ===== Convertisseur ===== -->
  <div class="calc-container">
    <div class="calc-wrap">
      <div class="calc-grid">
        <!-- Vente (le bureau VEND des devises au client) -->
        <div class="card">
          <h2 class="calc-header">Nous vous achetons des devises <span class="badge">Achat</span></h2>
          <form id="buy-form" style="display:grid; gap: 16px;">
            <div class="form-grid">
              <div class="form-block">
                <label class="label-static">Devise</label>
                <div class="value-static"><span id="buy-currency-code">{{ code }}</span> — {{ current.country }}</div>
              </div>

              <div class="form-block">
                <label>Euros (EUR)</label>
                <input class="field" type="number" name="buy_eur" step="0.01" min="0" inputmode="decimal"/>
              </div>

              <div class="form-block">
                <label>Montant en {{ code }}</label>
                <input class="field" type="number" name="buy_local" step="0.01" min="0" inputmode="decimal"/>
              </div>
            </div>
            <button type="submit" class="btn">Calculer</button>
          </form>
          <div id="buy-result" class="chip alt" style="display:none;"></div>
        </div>

        <!-- Achat (le bureau ACHÈTE des devises au client) -->
        <div class="card">
          <h2 class="calc-header">Nous vous vendons des devises <span class="badge">Vente</span></h2>
          <form id="sell-form" style="display:grid; gap: 16px;">
            <div class="form-grid">
              <div class="form-block">
                <label class="label-static">Devise</label>
                <div class="value-static"><span id="sell-currency-code">{{ code }}</span> — {{ current.country }}</div>
              </div>

              <div class="form-block">
                <label>Euros (EUR)</label>
                <input class="field" type="number" name="sell_eur" step="0.01" min="0" inputmode="decimal"/>
              </div>

              <div class="form-block">
                <label>Montant en {{ code }}</label>
                <input class="field" type="number" name="sell_local" step="0.01" min="0" inputmode="decimal"/>
              </div>
            </div>
            <button type="submit" class="btn">Calculer</button>
          </form>
          <div id="sell-result" class="chip alt" style="display:none;"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- ===== Article plein texte sous le convertisseur ===== -->
  <section class="info-article">
    <h2 class="h2">Tout savoir sur la devise {{ code }}</h2>
    <div class="article-body">
      {{ article|raw }}
    </div>
  </section>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
  document.addEventListener('DOMContentLoaded', () => {
    const CODE = {{ code|json_encode|raw }};
    // On garde TA logique actuelle :
    // - Carte Vente (nous vendons au client) => RATE.sell
    // - Carte Achat (nous achetons au client) => RATE.buy
    const RATE = {{ rate|json_encode|raw }}; // { buy, sell } en EUR→LOCAL

    const fmt2 = new Intl.NumberFormat('fr-FR',{minimumFractionDigits:2,maximumFractionDigits:2});

    const buyForm=document.getElementById('buy-form');
    const sellForm=document.getElementById('sell-form');

    const buyEur=buyForm.querySelector('input[name="buy_eur"]');
    const buyLoc=buyForm.querySelector('input[name="buy_local"]');
    const sellEur=sellForm.querySelector('input[name="sell_eur"]');
    const sellLoc=sellForm.querySelector('input[name="sell_local"]');

    const buyRes=document.getElementById('buy-result');
    const sellRes=document.getElementById('sell-result');

    function show(el,html){el.innerHTML=html;el.style.display='block';}
    function hide(el){el.style.display='none';}

    let buyPrimary = null, sellPrimary = null;

    buyEur.addEventListener('input',()=>{ buyPrimary='eur'; buyLoc.value=''; hide(buyRes); });
    buyLoc.addEventListener('input',()=>{ buyPrimary='loc'; buyEur.value=''; hide(buyRes); });
    sellEur.addEventListener('input',()=>{ sellPrimary='eur'; sellLoc.value=''; hide(sellRes); });
    sellLoc.addEventListener('input',()=>{ sellPrimary='loc'; sellEur.value=''; hide(sellRes); });

    // --- Vente (nous VENDONS des devises au client) -> utiliser RATE.sell (ton code initial)
    buyForm.addEventListener('submit',e=>{
      e.preventDefault();
      const eur=parseFloat(buyEur.value), loc=parseFloat(buyLoc.value);
      if(!RATE || typeof RATE.sell!=='number') return;

      if(buyPrimary==='eur' && !isNaN(eur)){
        const L = eur * RATE.sell;          // EUR -> LOCAL
        buyLoc.value = L.toFixed(2);
        show(buyRes, `${fmt2.format(eur)} EUR ≈ ${fmt2.format(L)} ${CODE}`);
      } else if(buyPrimary==='loc' && !isNaN(loc)){
        const E = loc / RATE.sell;          // LOCAL -> EUR
        buyEur.value = E.toFixed(2);
        show(buyRes, `${fmt2.format(loc)} ${CODE} ≈ ${fmt2.format(E)} EUR`);
      }
    });

    // --- Achat (nous ACHETONS des devises au client) -> utiliser RATE.buy (ton code initial)
    sellForm.addEventListener('submit',e=>{
      e.preventDefault();
      const eur=parseFloat(sellEur.value), loc=parseFloat(sellLoc.value);
      if(!RATE || typeof RATE.buy!=='number') return;

      if(sellPrimary==='loc' && !isNaN(loc)){
        const E = loc / RATE.buy;           // LOCAL -> EUR
        sellEur.value = E.toFixed(2);
        show(sellRes, `${fmt2.format(loc)} ${CODE} ≈ ${fmt2.format(E)} EUR`);
      } else if(sellPrimary==='eur' && !isNaN(eur)){
        const L = eur * RATE.buy;           // EUR -> LOCAL
        sellLoc.value = L.toFixed(2);
        show(sellRes, `${fmt2.format(eur)} EUR ≈ ${fmt2.format(L)} ${CODE}`);
      }
    });
  });
  </script>
{% endblock %}

